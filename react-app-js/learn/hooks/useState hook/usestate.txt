


useState Hook in React
=======================

Introduction
------------
The `useState` hook is one of the fundamental hooks provided by React. It allows you to add state to functional components. Prior to hooks, state could only be used in class components, but with the introduction of hooks in React 16.8, functional components can also manage state.

Syntax
------
The syntax for the `useState` hook is straightforward. You call `useState` with the initial state and it returns an array with two elements: the current state and a function to update that state.

javascript
const [state, setState] = useState(initialState);


Parameters
----------
- `initialState`: The initial state value. It can be a number, string, object, array, or any other type.

Return Value
------------
- An array with two elements:
  1. The current state.
  2. A function that updates the state.

Example Usage
-------------
Here is a basic example of how to use the `useState` hook in a functional component:

javascript
import React, { useState } from 'react';

function Counter() {
  // Declare a state variable named 'count', with the initial value of 0
  const [count, setCount] = useState(0);

  // Function to handle the click event and update the state
  const handleClick = () => {
    setCount(count + 1);
  };

  return (
    <div>
      <p>Count: {count}</p>
      <button onClick={handleClick}>Increment</button>
    </div>
  );
}

export default Counter;


Explanation
-----------
1. **Initialization**: `const [count, setCount] = useState(0);`
   - Initializes the state variable `count` with an initial value of `0`.
   - `setCount` is the function used to update the state.

2. **Updating State**: `setCount(count + 1);`
   - When the button is clicked, `setCount` updates the state by incrementing the current value of `count` by `1`.

Using State with Objects and Arrays
-----------------------------------
The `useState` hook can also manage state for objects and arrays.

Example with Object:
javascript
import React, { useState } from 'react';

function UserProfile() {
  const [user, setUser] = useState({ name: 'John', age: 25 });

  const updateName = () => {
    setUser({ ...user, name: 'Jane' });
  };

  return (
    <div>
      <p>Name: {user.name}</p>
      <p>Age: {user.age}</p>
      <button onClick={updateName}>Change Name</button>
    </div>
  );
}

export default UserProfile;


Example with Array:
javascript
import React, { useState } from 'react';

function ItemList() {
  const [items, setItems] = useState(['Item 1', 'Item 2']);

  const addItem = () => {
    setItems([...items, `Item ${items.length + 1}`]);
  };

  return (
    <div>
      <ul>
        {items.map((item, index) => (
          <li key={index}>{item}</li>
        ))}
      </ul>
      <button onClick={addItem}>Add Item</button>
    </div>
  );
}

export default ItemList;

